defmodule Offtherecord.Repo.Migrations.MigrateResources1 do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    # Check if user_id column already exists before adding it
    unless column_exists?(:posts, :user_id) do
      alter table(:posts) do
        add :user_id,
            references(:users,
              column: :id,
              name: "posts_user_id_fkey",
              type: :uuid,
              prefix: "public"
            )
      end
    end
  end

  def down do
    if column_exists?(:posts, :user_id) do
      drop constraint(:posts, "posts_user_id_fkey")

      alter table(:posts) do
        remove :user_id
      end
    end
  end

  # Helper function to check if column exists
  defp column_exists?(table, column) do
    result = repo().query!("""
      SELECT column_name
      FROM information_schema.columns
      WHERE table_name = '#{table}' AND column_name = '#{column}'
    """)

    length(result.rows) > 0
  end
end
